/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public\\dog.glb --transform --types
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    character_dog: THREE.Mesh
    Cube1339: THREE.Mesh
    Cube1339_1: THREE.Mesh
  }
  materials: {
    ['Beige.017']: THREE.MeshStandardMaterial
    ['Red.034']: THREE.MeshStandardMaterial
    ['Black.026']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/dog-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.character_dog.geometry} material={materials['Beige.017']} rotation={[Math.PI / 2, 0, 0]} />
      <group position={[0, 0.704, 0]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Cube1339.geometry} material={materials['Red.034']} />
        <mesh geometry={nodes.Cube1339_1.geometry} material={materials['Black.026']} />
      </group>
    </group>
  )
}

useGLTF.preload('/dog-transformed.glb')
