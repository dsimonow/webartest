/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 Campfire.glb --types --transform
*/

import * as THREE from 'three'
import React, { useRef, Suspense } from 'react'
import { useGLTF, MeshWobbleMaterial, Text } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    campfire: THREE.Mesh
  }
  materials: {
    None: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Campfire-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <Suspense fallback={<Text>Loading Asset</Text>}>
        <mesh geometry={nodes.campfire.geometry} material={materials.None} />
        <MeshWobbleMaterial factor={1} speed={10} color="#f25042"  />
      </Suspense>
    </group>
  )
}

useGLTF.preload('/Campfire-transformed.glb')
